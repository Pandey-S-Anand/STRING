// Intuitive Implementation

class Solution {
    public boolean isIsomorphic(String str1, String str2) {
        Map<Character, Character> mapStr1ToStr2 = new HashMap<>();
        Map<Character, Boolean> mappedInStr2 = new HashMap<>();

        for (int i = 0; i < str1.length(); i++) {
            char ch1 = str1.charAt(i);
            char ch2 = str2.charAt(i);

            if (mapStr1ToStr2.containsKey(ch1)) {
                if (mapStr1ToStr2.get(ch1) != ch2) {
                    return false;
                }
            } else {
                if (mappedInStr2.containsKey(ch2)) {
                    return false;
                }
                mapStr1ToStr2.put(ch1, ch2);
                mappedInStr2.put(ch2, true);
            }
        }

        return true;
    }
}


//Better Implementation

class Solution {
    public boolean isIsomorphic(String str1, String str2) {
        Map<Character, Character> mapStr1ToStr2 = new HashMap<>();
        boolean[]mappedInStr2=new boolean[256]; 
       
        for (int i = 0; i < str1.length(); i++) {
            char ch1 = str1.charAt(i);
            char ch2 = str2.charAt(i);

            if (mapStr1ToStr2.containsKey(ch1)) {
                if (mapStr1ToStr2.get(ch1) != ch2) {
                    return false;
                }
            } else {
                if (mappedInStr2[ch2]) {
                    return false;
                }
                mapStr1ToStr2.put(ch1, ch2);
                mappedInStr2[ch2]=true;
            }
        }

        return true;
    }
}


//Optimal Implementation

class Solution {
    public boolean isIsomorphic(String str1, String str2) {
        char[] mapStr1ToStr2 = new char[256];
        boolean[] mappedInStr2 = new boolean[256];

        for (int i = 0; i < str1.length(); i++) {
            char ch1 = str1.charAt(i);
            char ch2 = str2.charAt(i);

            if (mapStr1ToStr2[ch1] != '\u0000') {
                if (mapStr1ToStr2[ch1] != ch2) {
                    return false;
                }
            } else {
                if (mappedInStr2[ch2]) {
                    return false;
                }
                mapStr1ToStr2[ch1] = ch2;
                mappedInStr2[ch2] = true;
            }
        }

        return true;
    }
}
