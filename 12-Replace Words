//Bruteforce Approach

class Solution {
    public String replaceWords(List<String> dict, String sentence) {
        String[] words = sentence.split(" ");
        StringBuilder modifiedSentence = new StringBuilder();

        for (String word : words) {
            String prefix = "";
            for (int i = 0; i < word.length(); i++) {
                prefix += word.charAt(i);
                if (dict.contains(prefix)) {
                    break;
                }
            }

            modifiedSentence.append(prefix).append(" ");
        }

        modifiedSentence.deleteCharAt(modifiedSentence.length() - 1);

        return modifiedSentence.toString();
    }
}


//Better Approach

class Solution {
    public String replaceWords(List<String> dict, String sentence) {
        String[] words = sentence.split(" ");
        StringBuilder modifiedSentence = new StringBuilder();
        Set<String> dictionary = new HashSet<>(dict);

        for (String word : words) {
            String prefix = "";
            for (int i = 0; i < word.length(); i++) {
                prefix += word.charAt(i);
                if (dictionary.contains(prefix)) {
                    break;
                }
            }

            modifiedSentence.append(prefix).append(" ");
        }

        modifiedSentence.deleteCharAt(modifiedSentence.length() - 1);

        return modifiedSentence.toString();
    }
}

//Optimal Approach (Using Trie)
