
class Solution{
	public static int smallestNum(String str){
	   // count_after_dot : is used to find denominator in fraction form.
	   int numerator=0,count_after_dot = 0;
	   boolean dot_found=false;
	   
     // To find numerator in fraction form of given number. For example, for 30.25,numerator would be 3025.
	   for(int i=0;i<str.length();i++)
	     if(str.charAt(i)!='.')
	     {
	        numerator=numerator*10+(str.charAt(i)-'0');
	        if(dot_found==true)
	          count_after_dot++;
	     }
	     else//str.chatAt(i)=='.'
          dot_found=true;
           
       if(dot_found==false)
          return 1;//Since the number is already a natural Number so we return 1(Smallest number to multiply to convert to natural)

	   
	   // Find denominator in fraction form. For example,for 30.25, denominator is 100
	   int denominator=(int)Math.pow(10,count_after_dot);
	  
	   int hcf=HCF(numerator,denominator);
	   
	   int res=(denominator/hcf);
	   
	   return res;
	}
	
  public static int GCD(int divisor,int dividend)
  {
    int rem=dividend%divisor;
	  if(rem==0)
	    return divisor;
	      
	  return GCD(rem,divisor);      
  }
}

/*
The idea is to convert given floating point number into a fraction (not necessarily in reduced form) and 
find the GCD of numerator and denominator. For example, if input floating point number is 30.25, we convert into fraction as 3025/100. 
This can be easily done by finding the position of dot. 
Finally to get the answer, we divide the denominator of the converted fraction by GCD of denominator and numerator. 
For example, GCD of 3025 and 100 is 25. We divide 100 by 25 and get the answer as 4.
*/
