// Conventional Way

class Solution {
    public String addBinary(String str1, String str2) {
        int i=str1.length()-1,j=str2.length()-1,carryBit=0;
        StringBuilder ans=new StringBuilder("");
        
        while(i>=0 && j>=0)
        {
            int bit1=str1.charAt(i)-'0';
            int bit2=str2.charAt(j)-'0';
            
            if(bit1==0 && bit2==0 && carryBit==0)
            {
                carryBit=0;
                ans.append(0);
            }
            else if((bit1==1 && bit2==0 && carryBit==0) || (bit1==0 && bit2==1 && carryBit==0) || (bit1==0 && bit2==0 && carryBit==1))
            {
                carryBit=0;
                ans.append(1);
            }
            else if((bit1==1 && bit2==1 && carryBit==0) || (bit1==0 && bit2==1 && carryBit==1) || (bit1==1 && bit2==0 && carryBit==1))
            {
                carryBit=1;
                ans.append(0);
            }
            else if(bit1==1 && bit2==1 && carryBit==1)
            {
                carryBit=1;
                ans.append(1);
            }
            
            i--;
            j--;
        }
        
        
        while(i>=0)
        { 
            int bit1=str1.charAt(i)-'0';
            
            if(bit1==0 && carryBit==0)
            {
                carryBit=0;
                ans.append(0);
            }
            else if((bit1==1 && carryBit==0) || (bit1==0 && carryBit==1))
            {
                carryBit=0;
                ans.append(1);
            }
            else if(bit1==1 && carryBit==1)
            {
                carryBit=1;
                ans.append(0);
            }
            
            i--;
        }
        
        
        while(j>=0)
        {
            int bit2=str2.charAt(j)-'0';
            
            if(bit2==0 && carryBit==0)
            {
                carryBit=0;
                ans.append(0);
            }
            else if((bit2==1 && carryBit==0) || (bit2==0 && carryBit==1))
            {
                carryBit=0;
                ans.append(1);
            }
            else if(bit2==1 && carryBit==1)
            {
                carryBit=1;
                ans.append(0);
            }

            j--;
        }
        
        if(carryBit==1)
         ans.append(carryBit);
        
        StringBuilder reverse=ans.reverse();
        
        return reverse.toString();
    }
}


//Unconventional Way

class Solution {
    public String addBinary(String str1, String str2) {
        int i=str1.length()-1,j=str2.length()-1,carryBit=0,sum;
        StringBuilder ans=new StringBuilder("");
        
        while(i>=0 && j>=0)
        {
            sum=str1.charAt(i)-'0'+str2.charAt(j)-'0'+carryBit;
            
            if(sum==0)
            {
                carryBit=0;
                ans.append(0);
            }
            else if(sum==1)
            {
                carryBit=0;
                ans.append(1);
            }
            else if(sum==2)
            {
                carryBit=1;
                ans.append(0);
            }
            else if(sum==3)
            {
                carryBit=1;
                ans.append(1);
            }
            
            i--;
            j--;
        }
        
        
        while(i>=0)
        { 
            sum=str1.charAt(i)-'0'+carryBit;
            
            if(sum==0)
            {
                carryBit=0;
                ans.append(0);
            }
            else if(sum==1)
            {
                carryBit=0;
                ans.append(1);
            }
            else if(sum==2)
            {
                carryBit=1;
                ans.append(0);
            }
            
            i--;
        }
        
        
        while(j>=0)
        {
            sum=str2.charAt(j)-'0' + carryBit;
            
            if(sum==0)
            {
                carryBit=0;
                ans.append(0);
            }
            else if(sum==1)
            {
                carryBit=0;
                ans.append(1);
            }
            else if(sum==2)
            {
                carryBit=1;
                ans.append(0);
            }

            j--;
        }
        
        if(carryBit==1)
         ans.append(carryBit);
        
        StringBuilder reverse=ans.reverse();
        
        return reverse.toString(); 
    }
}
