//Bruteforce Approach

class Solution {
    public List<List<String>> groupAnagrams(String[] arr) {
       List<List<String>>res=new ArrayList<>();

       int n=arr.length;
       for(int i=0;i<n;i++)
       {
         if(arr[i]==null)
           continue;
         
         List<String> al=new ArrayList<>();

         al.add(arr[i]);
         
         for(int j=i+1;j<n;j++)
           if(arr[j]!=null && areAnagram(arr[i],arr[j]))
           {
              al.add(arr[j]);
              arr[j]=null;
           }     
         
         res.add(al);
       } 

       return res;
    }

    public boolean areAnagram(String str1,String str2)
    {
       if(str1.length()!=str2.length())
         return false;
       
       int n=str1.length();
    
       int[]count=new int[26];

       for(int i=0;i<n;i++)
         count[str1.charAt(i)-'a']++;
       
       for(int i=0;i<n;i++)
         count[str2.charAt(i)-'a']--;

       for(int i=0;i<26;i++)
         if(count[i]!=0)
           return false;
        
        return true;
    }
}


//Optimal Approach

//Naive Implementation

class Solution {
    public List<List<String>> groupAnagrams(String[] strs) {
        HashMap<String,List<String>>hm = new HashMap<>();
        
        for (String str : strs) 
        {
            char[]arr = str.toCharArray();
            Arrays.sort(arr);
            String sortedstr = new String(arr);
            
            if(hm.containsKey(sortedstr))
            { 
               List<String>list=hm.get(sortedstr);
               list.add(str);
            }
            else
            {
               List<String> list=new ArrayList<>();
               list.add(str);
               hm.put(sortedstr,list);
            }
        }
        
        List<List<String>>res=new ArrayList<>();

        for(String key :hm.keySet())
           res.add(hm.get(key));
        
        return res;
    }
}


//Optimal Implementation

class Solution {
    public List<List<String>> groupAnagrams(String[] strs) {
        HashMap<String,List<String>>hm = new HashMap<>();
        
        for (String str : strs) 
        {
            char[]arr = str.toCharArray();
            Arrays.sort(arr);
            String sortedstr = new String(arr);
            
            if(hm.containsKey(sortedstr))
              hm.get(sortedstr).add(str);
            else
            {
               hm.put(sortedstr,new ArrayList<>());
               hm.get(sortedstr).add(str);
            }
        }
      
        return new ArrayList<>(hm.values());
    }
}
